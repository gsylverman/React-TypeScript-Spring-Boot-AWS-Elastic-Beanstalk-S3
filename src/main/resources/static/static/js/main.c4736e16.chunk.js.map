{"version":3,"sources":["components/ImageList/ImageItem/ImageItem.js","components/ImageList/ImageList.js","components/MultiFileUpload/MultiFileUpload.js","components/MyDropzone/MyDropzone.js","components/Buttons/Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["ImageItem","name","fullName","url","setLoading","api","process","console","log","src","alt","style","maxHeight","width","onClick","axios","post","then","response","catch","err","href","download","target","rel","ImageList","loading","useState","images","setImages","fetchImages","useCallback","a","get","data","useEffect","map","item","id","MultiFileUpload","className","onChange","e","formData","FormData","files","Array","from","forEach","file","index","append","headers","respose","multiple","type","MyDropzone","onDrop","useDropzone","getRootProps","getInputProps","isDragActive","textAlign","Buttons","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4736e16.chunk.js","sourcesContent":["import axios from \"axios\";\n\nfunction ImageItem({ name, fullName, url, setLoading }) {\n  const api = process.env.REACT_APP_UPLOAD_API;\n  const deleteImage = () => {\n    setLoading(true);\n    axios\n      .post(`${api}/deleteFile/${fullName}`)\n      .then((response) => {\n        console.log(response);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  };\n  console.log(`${api}/image/${fullName}`);\n\n  return (\n    <>\n      <div>Image name: {name}</div>\n      <div>\n        <img\n          src={url}\n          alt={name}\n          style={{ maxHeight: \"200px\", width: \"auto\" }}\n        />\n      </div>\n      <button onClick={deleteImage}>Delete Image</button>\n      <span>\n        <a\n          href={`${api}/image/${fullName}`}\n          download={name}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <button>Download: {name}</button>\n        </a>\n      </span>\n    </>\n  );\n}\n\nexport default ImageItem;\n","import axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport ImageItem from \"./ImageItem/ImageItem\";\n\nfunction ImageList({ loading, setLoading }) {\n  const api = process.env.REACT_APP_UPLOAD_API;\n  const [images, setImages] = useState([]);\n\n  const fetchImages = useCallback(async () => {\n    const response = await axios.get(api + \"/images\");\n    console.log(response.data);\n    setImages(response.data);\n  }, [api]);\n\n  useEffect(() => {\n    fetchImages();\n  }, [fetchImages, loading]);\n\n  return images.map((item) => (\n    <ImageItem key={item.id} {...item} setLoading={setLoading} />\n  ));\n}\n\nexport default ImageList;\n","import axios from \"axios\";\n\nfunction MultiFileUpload({ setLoading }) {\n  const api = process.env.REACT_APP_UPLOAD_API;\n  const handleChange = (e) => {\n    const formData = new FormData();\n    const files = e.target.files;\n    Array.from(files).forEach((file, index) => {\n      formData.append(`files`, file);\n    });\n    setLoading(true);\n    axios\n      .post(`${api}/multiple`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n      .then((respose) => {\n        console.log(respose);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <form>\n        <input onChange={handleChange} multiple type=\"file\" name=\"files\" />\n      </form>\n    </div>\n  );\n}\n\nexport default MultiFileUpload;\n","import axios from \"axios\";\nimport { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\nfunction MyDropzone({ setLoading }) {\n  const api = process.env.REACT_APP_UPLOAD_API;\n  const onDrop = useCallback(\n    (files) => {\n      console.log(files);\n      const formData = new FormData();\n      formData.append(\"file\", files[0]);\n      setLoading(true);\n      axios\n        .post(api, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        })\n        .then(() => {\n          console.log(\"uploaded succesfully\");\n          setLoading(false);\n        })\n        .catch((err) => console.log(err));\n    },\n    [api, setLoading]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div {...getRootProps()} style={{ textAlign: \"center\" }}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Drop the files here ...</p>\n      ) : (\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      )}\n    </div>\n  );\n}\n\nexport default MyDropzone;\n","import axios from \"axios\";\n\nfunction Buttons({ setLoading }) {\n  const deleteAll = () => {\n    const api = process.env.REACT_APP_UPLOAD_API;\n    setLoading(true);\n    axios\n      .post(api + \"/deleteFiles\")\n      .then((response) => {\n        setLoading(false);\n        console.log(response);\n      })\n      .catch((err) => console.log(err));\n  };\n  return (\n    <>\n      <button onClick={deleteAll}>Delete all pictures</button>\n    </>\n  );\n}\n\nexport default Buttons;\n","import { useState } from \"react\";\nimport ImageList from \"./components/ImageList/ImageList\";\nimport MultiFileUpload from \"./components/MultiFileUpload/MultiFileUpload\";\nimport MyDropzone from \"./components/MyDropzone/MyDropzone\";\nimport Buttons from \"./components/Buttons/Buttons\";\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <MyDropzone setLoading={setLoading} />\n      <hr />\n      <MultiFileUpload setLoading={setLoading} />\n      <hr />\n      <Buttons setLoading={setLoading} />\n      <hr />\n      <ImageList loading={loading} setLoading={setLoading} />\n      <hr />\n      {loading}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}